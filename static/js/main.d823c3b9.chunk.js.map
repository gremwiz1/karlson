{"version":3,"sources":["components/Banner.js","components/FirstScreen.js","components/Leftpanel.js","components/KeyBoardTelephone.js","components/PanelNumberTelephone.js","components/Panels.js","components/RightPanel.js","components/SecondScreen.js","components/App.js","reportWebVitals.js","index.js"],"names":["Banner","clickBanner","className","type","onClick","FirstScreen","showSecondScreen","React","useState","timerEnd","setTimerEnd","useEffect","setTimeout","width","height","url","playing","muted","controls","Leftpanel","NUMBERS","KeyboardTelephone","handleButton","handleResetNumberTelephone","activeId","setActiveId","deleteFocus","setFocus","foo","document","querySelectorAll","i","length","classList","remove","addClassElement","id","newFocusElement","getElementById","add","focus","pressOnButton","evt","target","textContent","onKeyDownCapture","nextActiveId","parseInt","keyCode","map","item","index","PanelNumberTelephone","numberTelephone","isValidationTelephoneNumber","Panels","setValidNumberTelephone","SetNumberTelephone","isChecked","setIsChecked","setIsValidationTelephoneNumber","validationForm","buttonSubmit","querySelector","setAttribute","contains","removeAttribute","apiNumberTelephoneValidation","telephone","fetch","then","res","ok","json","Promise","reject","status","onSubmit","preventDefault","join","result","valid","catch","err","console","log","number","prevState","class","name","checked","RightPanel","SecondScreen","isValidNumberTelephone","setIsValidNumberTelephone","flag","App","isClickOnBanner","setIsClickOnBanner","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d823c3b9.chunk.js","sourcesContent":["import React from 'react';\r\nfunction Banner({ clickBanner }) {\r\n    const handleClickBanner = () => {\r\n        clickBanner();\r\n    }\r\n    return (\r\n        <div className=\"banner\">\r\n            <p className=\"banner__subtitle\">ИСПОЛНИТЕ МЕЧТУ ВАШЕГО МАЛЫША!<br />ПОДАРИТЕ ЕМУ СОБАКУ!</p>\r\n            <div className=\"banner__barcode\"></div>\r\n            <p className=\"banner__text\">Сканируйте QR-код или нажмите ОК</p>\r\n            <button type=\"button\" className=\"banner__button\" onClick={handleClickBanner}>ОК</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Banner;","import React from 'react';\r\nimport Banner from './Banner';\r\nimport ReactPlayer from 'react-player'\r\nfunction FirstScreen({ showSecondScreen }) {\r\n    const [timerEnd, setTimerEnd] = React.useState(false);\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            setTimerEnd(true);\r\n        }, 5000);\r\n    })\r\n\r\n    return (\r\n        <div className=\"first-screen\">\r\n            <ReactPlayer width=\"1280px\" height=\"720px\" url=\"https://www.youtube.com/embed/dbvi_S3fy2M\" playing={true} muted={true} controls={true} />\r\n            {timerEnd ? <Banner clickBanner={showSecondScreen} /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport default FirstScreen;","import React from \"react\";\r\nfunction Leftpanel() {\r\n    return (\r\n<div className=\"panels\">\r\n    <h2 className=\"panels__response\">ЗАЯВКА ПРИНЯТА</h2>\r\n    <p className=\"panels__text\">Держите телефон под рукой.<br/> Скоро с Вами свяжется наш менеджер.</p>\r\n</div>\r\n    )\r\n};\r\nexport default Leftpanel;","import React from \"react\";\r\nconst NUMBERS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\nfunction KeyboardTelephone({ handleButton, handleResetNumberTelephone }) {\r\n    const [activeId, setActiveId] = React.useState(5);\r\n    React.useEffect(() => {\r\n        deleteFocus();\r\n        setFocus();\r\n    }, [activeId]);\r\n\r\n    const deleteFocus = () => {\r\n        var foo = document.querySelectorAll(\"button\");\r\n        for (var i = 0; i < foo.length; i++) {\r\n            foo[i].classList.remove(\"keyboard__button_active\");\r\n        }\r\n    }\r\n    const setFocus = () => {\r\n        if (activeId == 0) {\r\n            addClassElement(9);\r\n        }\r\n        else {\r\n            if (activeId == 10) {\r\n                addClassElement(10);\r\n            }\r\n            else {\r\n                addClassElement(activeId - 1);\r\n            }\r\n        }\r\n    }\r\n    const addClassElement = (id) => {\r\n        const newFocusElement = document.getElementById(id);\r\n        newFocusElement.classList.add('keyboard__button_active');\r\n        newFocusElement.focus();\r\n    }\r\n    const pressOnButton = (evt) => {\r\n        setActiveId(evt.target.textContent);\r\n        handleButton(evt.target.textContent);\r\n    }\r\n    const resetNumberTelephone = (evt) => {\r\n        setActiveId(10);\r\n        handleResetNumberTelephone();\r\n    }\r\n    const checkKeys = (evt) => {\r\n        let nextActiveId = parseInt(activeId);\r\n        switch (evt.keyCode) {  // проверяем какую клавишу нажали\r\n            case 40: {\r\n                nextActiveId += 3;\r\n                break;\r\n            }\r\n            case 38: {\r\n                nextActiveId -= 3;\r\n                break;\r\n            }\r\n            case 39: {\r\n                nextActiveId += 1;\r\n                break;\r\n            }\r\n            case 37: {\r\n                nextActiveId -= 1;\r\n                break;\r\n            }\r\n            case 48: {\r\n                nextActiveId = 0;\r\n                handleButton('0');\r\n                break;\r\n            }\r\n            case 49: {\r\n                nextActiveId = 1;\r\n                handleButton(1);\r\n                break;\r\n            }\r\n            case 50: {\r\n                nextActiveId = 2;\r\n                handleButton(2);\r\n                break;\r\n            }\r\n            case 51: {\r\n                nextActiveId = 3;\r\n                handleButton(3);\r\n                break;\r\n            }\r\n            case 52: {\r\n                nextActiveId = 4;\r\n                handleButton(4);\r\n                break;\r\n            }\r\n            case 53: {\r\n                nextActiveId = 5;\r\n                handleButton(5);\r\n                break;\r\n            }\r\n            case 54: {\r\n                nextActiveId = 6;\r\n                handleButton(6);\r\n                break;\r\n            }\r\n            case 55: {\r\n                nextActiveId = 7;\r\n                handleButton(7);\r\n                break;\r\n            }\r\n            case 56: {\r\n                nextActiveId = 8;\r\n                handleButton(8);\r\n                break;\r\n            }\r\n            case 57: {\r\n                nextActiveId = 9;\r\n                handleButton(9);\r\n                break;\r\n            }\r\n        }\r\n        if (nextActiveId < -1) return;\r\n        if (nextActiveId == 12) nextActiveId = 0; //переход с кнопки 9 вниз на кнопку 0\r\n        if (nextActiveId == 11 && activeId == 10) nextActiveId = 0;  //переход с кнопки стереть вправо на кнопку 0\r\n        if (nextActiveId == 11 && activeId == 8) nextActiveId = 10; //переход с кнопки 8 вниз на кнопку стереть\r\n        if (nextActiveId == -1 && activeId == 0) nextActiveId = 10; //переход с кнопки 0 влево на кнопку стереть\r\n        if (nextActiveId == -1 && activeId == 2) return; // нажатие на кнопке 2 вверх\r\n        if (nextActiveId == 13) return; //нажатие на кнопке стереть вниз\r\n        setActiveId(nextActiveId);\r\n    }\r\n    return (\r\n        <div className=\"keyboard\" onKeyDownCapture={checkKeys}>\r\n            {NUMBERS.map((item, index) => <button className=\"keyboard__button\" type=\"button\" key={index} id={index} onClick={pressOnButton}>{item}</button>)}\r\n            <button className=\"keyboard__button keyboard__button_erase\" type=\"reset\" id=\"10\" onClick={resetNumberTelephone}>СТЕРЕТЬ</button>\r\n        </div>\r\n    )\r\n}\r\nexport default KeyboardTelephone;","import React from 'react';\r\nfunction PanelNumberTelephone({ numberTelephone , isValidationTelephoneNumber}) {\r\n    \r\n    return (\r\n        <p className={isValidationTelephoneNumber ? \"panels__number-telephone\" : \"panels__number-telephone panels__number-telephone_invalid\"}>+7(\r\n            {numberTelephone[0] ? numberTelephone[0] : \"_\"}\r\n            {numberTelephone[1] ? numberTelephone[1] : \"_\"}\r\n            {numberTelephone[2] ? numberTelephone[2] : \"_\"}\r\n            )\r\n            {numberTelephone[3] ? numberTelephone[3] : \"_\"}\r\n            {numberTelephone[4] ? numberTelephone[4] : \"_\"}\r\n            {numberTelephone[5] ? numberTelephone[5] : \"_\"}\r\n            -\r\n            {numberTelephone[6] ? numberTelephone[6] : \"_\"}\r\n            {numberTelephone[7] ? numberTelephone[7] : \"_\"}\r\n            -\r\n            {numberTelephone[8] ? numberTelephone[8] : \"_\"}\r\n            {numberTelephone[9] ? numberTelephone[9] : \"_\"}\r\n        </p>\r\n    )\r\n}\r\nexport default PanelNumberTelephone;","import React from 'react';\r\nimport KeyboardTelephone from './KeyBoardTelephone';\r\nimport PanelNumberTelephone from './PanelNumberTelephone';\r\nfunction Panels({ setValidNumberTelephone }) {\r\n\r\n    const [numberTelephone, SetNumberTelephone] = React.useState([]);\r\n    const [isChecked, setIsChecked] = React.useState(false);\r\n    const [isValidationTelephoneNumber, setIsValidationTelephoneNumber] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        validationForm();\r\n    }, [isChecked, numberTelephone]);\r\n    const handleCheckBox = () => {\r\n        const checkBoxElement = document.querySelector('.checkbox_invisible');\r\n        checkBoxElement.checked = !isChecked;\r\n        setIsChecked(!isChecked);\r\n    }\r\n    const pressKeyboardTelephone = (number) => {\r\n        SetNumberTelephone(prevState => {\r\n            return [...prevState, number]\r\n        })\r\n    }\r\n    const pressResetTelephoneNumber = () => {\r\n        SetNumberTelephone([]);\r\n        setIsValidationTelephoneNumber(true);\r\n    }\r\n    const validationForm = () => {\r\n        const buttonSubmit = document.querySelector('.panels__button');\r\n        buttonSubmit.setAttribute('disabled', true);\r\n        if (buttonSubmit.classList.contains('keyboard__button_active')) {\r\n            buttonSubmit.classList.remove('keyboard__button_active');\r\n        }\r\n        if (numberTelephone.length === 10 && isChecked) {\r\n            buttonSubmit.removeAttribute('disabled');\r\n            const activeElement = document.querySelector('.keyboard__button_active');\r\n            activeElement.classList.remove('keyboard__button_active');\r\n            buttonSubmit.classList.add('keyboard__button_active');\r\n        }\r\n    }\r\n    const submitForm = (evt) => {\r\n        evt.preventDefault();\r\n        const telephone = numberTelephone.join('');\r\n        apiNumberTelephoneValidation(telephone)\r\n            .then((result) => {\r\n                setValidNumberTelephone(result.valid);\r\n                setIsValidationTelephoneNumber(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    const apiNumberTelephoneValidation = (telephone) => {\r\n        return fetch(`http://apilayer.net/api/validate?access_key=40f9d88b9f643c2271948f1d9db131c2&number=\r\n        ${telephone}&country_code=RU&format=1`)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <form className=\"panels\" onSubmit={submitForm}>\r\n            <h2 className=\"panels__title\">Введите ваш номер мобильного телефона</h2>\r\n            <PanelNumberTelephone numberTelephone={numberTelephone} isValidationTelephoneNumber={isValidationTelephoneNumber} />\r\n            <p className=\"panels__text\">и с Вами свяжется наш менеждер для дальнейшей консультации</p>\r\n            <KeyboardTelephone handleButton={pressKeyboardTelephone} handleResetNumberTelephone={pressResetTelephoneNumber} />\r\n            {isValidationTelephoneNumber ?\r\n                <div className=\"panels__agreement\">\r\n                    <label className=\"checkbox\">\r\n                        <input type=\"checkbox\" class=\"checkbox_invisible\" id=\"1\" name=\"checkbox\" />\r\n                        <div className={isChecked ? \"checkbox_visible checkbox_checked\" : \"checkbox_visible\"} onClick={handleCheckBox}></div>\r\n                    </label>\r\n                    <p className=\"checkbox__text\">Согласие на обработку персональных данных</p>\r\n                </div>\r\n                :\r\n                <p className=\"panels__invalid-text\">НЕВЕРНО ВВЕДЕН НОМЕР</p>}\r\n\r\n            <button type=\"submit\" className=\"panels__button\">ПОДТВЕРДИТЬ НОМЕР</button>\r\n        </form>\r\n\r\n    )\r\n}\r\nexport default Panels;\r\n","import React from 'react';\r\nfunction RightPanel() {\r\n    return (\r\n        <div className=\"right-panel\">\r\n            <button type=\"button\" className=\"button-close\"></button>\r\n            <div className=\"right-panel__barcode\">\r\n                <p className=\"right-panel__text\">Сканируйте QR-код ДЛЯ ПОЛУЧЕНИЯ ДОПОЛНИТЕЛЬНОЙ ИНФОРМАЦИИ</p>\r\n                <div className=\"right-panel__image\"></div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default RightPanel;","import React from 'react';\r\nimport Leftpanel from './Leftpanel';\r\nimport Panels from './Panels';\r\nimport RightPanel from './RightPanel';\r\nfunction SecondScreen() {\r\n    const [isValidNumberTelephone, setIsValidNumberTelephone] = React.useState(false);\r\n    const setValidNumberTelephone = (flag) => {\r\n        setIsValidNumberTelephone(flag);\r\n    }\r\n    return (\r\n        <>\r\n            {isValidNumberTelephone ? <Leftpanel /> : <Panels setValidNumberTelephone={setValidNumberTelephone} />}\r\n            <RightPanel />\r\n        </>\r\n\r\n    );\r\n}\r\nexport default SecondScreen;","import React from \"react\";\nimport FirstScreen from \"./FirstScreen\";\nimport SecondScreen from \"./SecondScreen\";\n\nfunction App() {\n\n  const [isClickOnBanner, setIsClickOnBanner] = React.useState(false);\n  const showSecondScreen = () => {\n    setIsClickOnBanner(true);\n  }\n  return (\n    <div className=\"page\">\n      {isClickOnBanner ? <SecondScreen /> : <FirstScreen showSecondScreen={showSecondScreen} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}